/**
* Hello World API
* Say hello API
*
* The version of the OpenAPI document: 1.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "Hello.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

Hello::Hello()
{
    m_Language = "English";
    m_LanguageIsSet = false;
    m_Content = "";
    m_ContentIsSet = false;
    
}

void Hello::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool Hello::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool Hello::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "Hello" : pathPrefix;

            
    return success;
}

bool Hello::operator==(const Hello& rhs) const
{
    return
    
    
    
    ((!languageIsSet() && !rhs.languageIsSet()) || (languageIsSet() && rhs.languageIsSet() && getLanguage() == rhs.getLanguage())) &&
    
    
    ((!contentIsSet() && !rhs.contentIsSet()) || (contentIsSet() && rhs.contentIsSet() && getContent() == rhs.getContent()))
    
    ;
}

bool Hello::operator!=(const Hello& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const Hello& o)
{
    j = nlohmann::json();
    if(o.languageIsSet())
        j["language"] = o.m_Language;
    if(o.contentIsSet())
        j["Content"] = o.m_Content;
    
}

void from_json(const nlohmann::json& j, Hello& o)
{
    if(j.find("language") != j.end())
    {
        j.at("language").get_to(o.m_Language);
        o.m_LanguageIsSet = true;
    } 
    if(j.find("Content") != j.end())
    {
        j.at("Content").get_to(o.m_Content);
        o.m_ContentIsSet = true;
    } 
    
}

std::string Hello::getLanguage() const
{
    return m_Language;
}
void Hello::setLanguage(std::string const& value)
{
    m_Language = value;
    m_LanguageIsSet = true;
}
bool Hello::languageIsSet() const
{
    return m_LanguageIsSet;
}
void Hello::unsetLanguage()
{
    m_LanguageIsSet = false;
}
std::string Hello::getContent() const
{
    return m_Content;
}
void Hello::setContent(std::string const& value)
{
    m_Content = value;
    m_ContentIsSet = true;
}
bool Hello::contentIsSet() const
{
    return m_ContentIsSet;
}
void Hello::unsetContent()
{
    m_ContentIsSet = false;
}


} // namespace org::openapitools::server::model

