/**
* Hello World API
* Say hello API
*
* The version of the OpenAPI document: 1.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * Hello.h
 *
 * 
 */

#ifndef Hello_H_
#define Hello_H_


#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  Hello
{
public:
    Hello();
    virtual ~Hello() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const Hello& rhs) const;
    bool operator!=(const Hello& rhs) const;

    /////////////////////////////////////////////
    /// Hello members

    /// <summary>
    /// 
    /// </summary>
    std::string getLanguage() const;
    void setLanguage(std::string const& value);
    bool languageIsSet() const;
    void unsetLanguage();
    /// <summary>
    /// 
    /// </summary>
    std::string getContent() const;
    void setContent(std::string const& value);
    bool contentIsSet() const;
    void unsetContent();

    friend void to_json(nlohmann::json& j, const Hello& o);
    friend void from_json(const nlohmann::json& j, Hello& o);
protected:
    std::string m_Language;
    bool m_LanguageIsSet;
    std::string m_Content;
    bool m_ContentIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* Hello_H_ */
