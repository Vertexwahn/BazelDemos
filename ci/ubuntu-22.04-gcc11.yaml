#
#   SPDX-FileCopyrightText: 2022 Julian Amann <dev@vertexwahn.de>
#   SPDX-License-Identifier: Apache-2.0
#

# GCC 11 on Ubuntu 22.04
# Make sure we can build with GCC 11

steps:
  - checkout: self
    clean: true
    fetchDepth: 1
    lfs: false
    submodules: false

  - script: |
      lsb_release -a
    displayName: "Show OS version"

  - script: |
      bazel version
    displayName: "Show Bazel version"

  - script: |
      gcc --version
    displayName: "Show GCC version"

  - script: |
      sudo apt-get install erlang-base
    displayName: "Install Erlang"

  - script: |
      ROOT_DIR=$(pwd)

      echo "genrule"
      cd ${ROOT_DIR}/core_principles/genrule
      bazel build //...
      bazel run //:Demo

      echo "select"
      cd ${ROOT_DIR}/core_principles/select
      bazel build //...
      bazel run //:hello_world
    displayName: "core principles demos"

  - script: |
      ROOT_DIR=$(pwd)

      cd ${ROOT_DIR}/hello_world/bazel
      bazel build //...
    displayName: "Hello World Bazel"

  - script: |
      ROOT_DIR=$(pwd)

      cd ${ROOT_DIR}/hello_world/cpp
      bazel build //...
      bazel build --compilation_mode=dbg //...
      bazel build --compilation_mode=opt //...
      bazel run //:hello_world
    displayName: "Hello World C++"

  - script: |
      ROOT_DIR=$(pwd)

      cd ${ROOT_DIR}/hello_world/cpp
      bazel build //...
      bazel run //:hello_world
    displayName: "Hello World C#"

  - script: |
      ROOT_DIR=$(pwd)

      cd ${ROOT_DIR}/hello_world/d
      bazel build //...
      bazel run //:hello_world
    displayName: "Hello World D"

  - script: |
      ROOT_DIR=$(pwd)

      cd ${ROOT_DIR}/hello_world/erlang
      bazel build //...
      bazel run //:hello_world
    displayName: "Hello World Erlang"

  - script: |
      ROOT_DIR=$(pwd)

      cd ${ROOT_DIR}/hello_world/go
      bazel build //...
      bazel run //:hello_world
    displayName: "Hello World Go"

  - script: |
      ROOT_DIR=$(pwd)

      echo "Java"
      cd ${ROOT_DIR}/hello_world/java
      bazel build //...
      bazel run //:hello_world

      echo "JavaScript"
      cd ${ROOT_DIR}/hello_world/java_script
      bazel build //...
      bazel run //:hello_world

      echo "LaTeX"
      cd ${ROOT_DIR}/hello_world/latex
      bazel build //...

      echo "Perl"
      cd ${ROOT_DIR}/hello_world/perl
      bazel build //...
      bazel run //:hello_world

      echo "Python"
      cd ${ROOT_DIR}/hello_world/python
      bazel build //...
      bazel run //:hello_world

      echo "Rust"
      cd ${ROOT_DIR}/hello_world/rust
      bazel build //...
      bazel run //:hello_world

      echo "Ruby"
      cd ${ROOT_DIR}/hello_world/ruby
      bazel build //...
      bazel run //:hello_world

      echo "Shell"
      cd ${ROOT_DIR}/hello_world/shell
      bazel build //...
      bazel run //:hello_world
    displayName: "Hello World demos"

  - script: |
      ROOT_DIR=$(pwd)
      cd ${ROOT_DIR}/intermediate/cpp/Catch2
      bazel test --config=gcc11 //...
      bazel test --config=gcc11 --compilation_mode=dbg //...
      bazel test --config=gcc11 --compilation_mode=opt //...
    displayName: "Bazel build Catch2 demo"

  - script: |
      ROOT_DIR=$(pwd)
      cd ${ROOT_DIR}/intermediate/cpp/JsonForModernCpp
      echo "fast"
      bazel build --config=gcc11 //...
      bazel test --config=gcc11 //...
      echo "dbg"
      bazel build --config=gcc11 --compilation_mode=dbg //...
      bazel test --config=gcc11 --compilation_mode=dbg //...
      echo "opt"
      bazel build --config=gcc11 --compilation_mode=opt //...
      #bazel test --config=gcc11 --compilation_mode=opt //...
    displayName: "Bazel build & Test JsonForModernCpp demo"

  - script: |
      ROOT_DIR=$(pwd)
      cd ${ROOT_DIR}/intermediate/cpp/fmt
      bazel build //...
    displayName: "Bazel build fmt demo gcc11-fastbuild"

  - script: |
      ROOT_DIR=$(pwd)
      cd ${ROOT_DIR}/intermediate/cpp/oneTBB
      bazel build //...
    displayName: "Bazel build oneTBB demo gcc11-fastbuild"

  - script: |
      ROOT_DIR=$(pwd)
      cd ${ROOT_DIR}/intermediate/cpp/OpenEXR
      bazel build //...
    displayName: "Bazel build OpenEXR demo gcc11-fastbuild"
